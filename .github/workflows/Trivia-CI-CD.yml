
name: NEURONE-Trivia CI-CD

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  #Runs-on
  RUNS_ON: "Ubuntu 22.04"
  
  #Dependencies Version
  NODE_VERSION: "10.19.0"
  ANGULAR_VERSION: "9.1.13"

  #SSH keys of Autorized Host/User by the server to connect later
  SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }} #Clave publica de la maquina para conectarse al servidor
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY}} #Clave privada de la maquina para conectarse al servidor

  #NEURONEGM Database information
  NEURONEGM_DATABASE: "neuronegm"
  NEURONEGM_DATABASE_USER: "neuroneAdmin"
  NEURONEGM_DATABASE_PASSWORD: ${{ secrets.NEURONEGM_DATABASE_PASSWORD }}

  NEURONEGM_REPOSITORY: "gerardoluceroc/NEURONE-GM"
  NEURONEGM_REPOSITORY_FOLDER_NAME: "NEURONE-GM"
  NEURONEGM_SERVER_DIRECTORY: "./NEURONE-GM/Server"

  #Trivia Data
  TRIVIA_REPOSITORY: "NEURONE-IL/GAME"
  TRIVIA_REPOSITORY_FOLDER_NAME: "GAME"
  TRIVIA_CLIENT_DIRECTORY: "./GAME/Client"
  TRIVIA_SERVER_DIRECTORY: "./GAME/Server"
  BUILD_TRIVIA_LOCAL_PATH_SOURCE: "./GAME/Server/public"

  #Trivia deployment data
  NEURONE_TRIVIA_DEPLOY_REPOSITORY: "trabajo-titulacion-neurone/NEURONE-Trivia-Deployment"
  NEURONE_TRIVIA_DEPLOY_REPOSITORY_FOLDER_NAME: "NEURONE-Trivia-Deployment"
  NEURONE_TRIVIA_DEPLOY_DIRECTORY: "./NEURONE-Trivia-Deployment/ansible-files"
  NEURONE_TRIVIA_ANSIBLE_FILES_DIRECTORY: "./NEURONE-Trivia-Deployment/ansible-files"

  #Neurone-Core data
  NEURONE_CORE_REPOSITORY: "NEURONE-IL/neurone"
  NEURONE_CORE_FOLDER_NAME: "neurone-master"
  NEURONE_CORE_DIRECTORY: "./neurone-master"
  NEURONE_CORE_BUILD_SCRIPT: "neurone-build.sh"
  NEURONE_CORE_START_SCRIPT: "neurone-start.sh"
  NEURONE_CORE_IMAGES_PATH_SOURCE: "./neurone-images"

  #Server Data
  SERVER_USERNAME: "neurone"
  # SERVER_PASSWORD: "claveneurone321."
  SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
  # SERVER_PASSWORD: ${{ secrets.SERVER_INTERACTION_PASSWORD }}
  SERVER_IPV4: 137.184.194.34
  SSH_PORT: 22
  BUILD_TRIVIA_SERVER_PATH_TARGET: "./build-trivia-frontend"
  NEURONE_CORE_IMAGES_SERVER_PATH_TARGET: "./neurone-images"



jobs:
  # neurone-core-CI:
  
  #   runs-on: ubuntu-22.04

  #   steps:
  #   - name: Cloning NEURONE-Core
  #     uses: actions/checkout@v3
  #     with:
  #       repository: ${{ env.NEURONE_CORE_REPOSITORY }}
  #       path: ${{ env.NEURONE_CORE_FOLDER_NAME }}

  #   - name: Install docker dependencies for NEURONE-Core
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install ca-certificates curl gnupg lsb-release

  #   - name: Install docker and docker compose for NEURONE-Core
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose  

  #   - name: Build NEURONE-Core
  #     working-directory: ${{ env.NEURONE_CORE_DIRECTORY }}
  #     run: ./${{ env.NEURONE_CORE_BUILD_SCRIPT }}

  #   - name: Create neurone-images folder
  #     run: mkdir neurone-images

  #   - name: Save NEURONE-Core Images on Tar Files
  #     working-directory: ${{ env.NEURONE_CORE_IMAGES_PATH_SOURCE }}
  #     run: |
  #       docker save -o mongo.tar dgacitua/mongo
  #       docker save -o neurone.tar dgacitua/neurone
      
  #   - name: Upload NEURONE-Core build artifact for deployment job
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: neurone-images
  #       path: ${{ env.NEURONE_CORE_IMAGES_PATH_SOURCE }}

  #   - name: Start NEURONE-Core
  #     working-directory: ${{ env.NEURONE_CORE_DIRECTORY }}
  #     run: ./${{ env.NEURONE_CORE_START_SCRIPT }}

    

      

  # neurone-gm-CI:
  
  #   runs-on: ubuntu-22.04

  #   steps:
       
  #   - name: Cloning NEURONE-GM repository
  #     uses: actions/checkout@v3
  #     with:
  #       repository: ${{ env.NEURONEGM_REPOSITORY }}
  #       path: ${{ env.NEURONEGM_REPOSITORY_FOLDER_NAME }}  

  #   - name: Use Node.js ${{ env.NODE_VERSION }}
  #     uses: actions/setup-node@v3
  #     with:
  #       # node-version: ${{ matrix.node-version }}
  #       node-version: ${{ env.NODE_VERSION }}
  #       cache: 'npm'
  #       cache-dependency-path: '${{ env.NEURONEGM_SERVER_DIRECTORY }}/package-lock.json' 
        
  #   - name: Install PM2 globally
  #     run: npm install -g pm2
      
  #   - name: Run MongoDB with Docker
  #     run: docker run -d --name mongo-for-tests -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=${{ env.NEURONEGM_DATABASE_USER}} -e MONGO_INITDB_ROOT_PASSWORD=${{ env.NEURONEGM_DATABASE_PASSWORD }} -e MONGO_INITDB_DATABASE=${{ env.NEURONEGM_DATABASE }} mongo:latest

  #   - name: Install Dependencies
  #     working-directory: ${{ env.NEURONEGM_SERVER_DIRECTORY }}
  #     run: npm install

  #   - name: Run test (continue with error)
  #     working-directory: ${{ env.NEURONEGM_SERVER_DIRECTORY }}
  #     run: npm test --timeout 100000
  #     continue-on-error: true

  #   - name: Run NEURONE-GM Server with PM2
  #     working-directory: ${{ env.NEURONEGM_SERVER_DIRECTORY }}
  #     run: pm2 start app.js --name neurone-gm



  trivia-CI:
  
    runs-on: ubuntu-22.04

    steps:
    
    - name: Cloning Trivia repository
      uses: actions/checkout@v3
      with:
        path: ${{ env.TRIVIA_REPOSITORY_FOLDER_NAME }} 
        repository: ${{ env.TRIVIA_REPOSITORY }}
        ref: "bde5fef4ac2330ba38b0871173d459c21f00e604"

    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        # node-version: ${{ matrix.node-version }}
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: '${{ env.TRIVIA_CLIENT_DIRECTORY }}/package-lock.json'   

    - name: Install PM2 globally
      run: npm install -g pm2
      
    - name: Install Angular globally
      run: npm install -g @angular/cli@${{env.ANGULAR_VERSION}}
      
    - name: Install backend dependencies
      working-directory: ${{ env.TRIVIA_SERVER_DIRECTORY }}
      run: npm install

    - name: Run backend tests (continue with error)
      working-directory: ${{ env.TRIVIA_SERVER_DIRECTORY }}
      run: npm test --timeout 100000
      continue-on-error: true  

    - name: Install frontend dependencies
      working-directory: ${{ env.TRIVIA_CLIENT_DIRECTORY }}
      run: npm install

    - name: Run frontend tests (continue with error)
      working-directory: ${{ env.TRIVIA_CLIENT_DIRECTORY }}
      run: npm test --timeout 100000
      continue-on-error: true  

    - name: Build Trivia frontend
      working-directory: ${{ env.TRIVIA_CLIENT_DIRECTORY }}
      run: | 
        npm install file-saver
        ng build --prod --output-path ../Server/public    
      
    - name: Upload trivia build to Artifact Storage for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: build-trivia-frontend
        path: ${{ env.BUILD_TRIVIA_LOCAL_PATH_SOURCE }}



  # send-build-trivia:
  
  #   needs: [trivia-CI]
  #   runs-on: ubuntu-22.04
    
  #   steps:
    
  #   #Generate a pair of SSH keys that will be replaced later by the environment variable keys
  #   - name: Create ssh-keygen pair
  #     run: ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ''

  #   - name: Copy ssh key of environment variables in local machine
  #     run: |
  #       echo "${{ env.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
  #       echo "${{ env.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
  #       chmod 600 ~/.ssh/id_rsa  

  #   - name: Download Trivia build artifact from build job
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: build-trivia-frontend
  #       path: ${{ env.BUILD_TRIVIA_LOCAL_PATH_SOURCE }}

  #   - name: Send Build of Trivia to the server via ssh
  #     uses: appleboy/scp-action@v0.1.4
  #     with:
  #       host: ${{ env.SERVER_IPV4 }}
  #       username: ${{ env.SERVER_USERNAME }}
  #       key: ${{ env.SSH_PRIVATE_KEY }}
  #       port: ${{ env.SSH_PORT }}
  #       source: ${{ env.BUILD_TRIVIA_LOCAL_PATH_SOURCE }}
  #       target: ${{ env.BUILD_TRIVIA_SERVER_PATH_TARGET }}
  #       strip_components: 3



  # send-build-neurone-core:
  
  #   needs: [neurone-core-CI]
  #   runs-on: ubuntu-22.04
    
  #   steps:
    
  #   #Generate a pair of SSH keys that will be replaced later by the environment variable keys
  #   - name: Create ssh-keygen pair
  #     run: ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ''

  #   - name: Copy ssh key of environment variables in local machine
  #     run: |
  #       echo "${{ env.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
  #       echo "${{ env.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
  #       chmod 600 ~/.ssh/id_rsa  

  #   - name: Download NEURONE images artifact from build job
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: neurone-images
  #       path: ${{ env.NEURONE_CORE_IMAGES_PATH_SOURCE }}

  #   - name: Transfer NEURONE-Core images files to server
  #     uses: appleboy/scp-action@v0.1.4
  #     with:
  #       host: ${{ env.SERVER_IPV4 }}
  #       username: ${{ env.SERVER_USERNAME }}
  #       key: ${{ env.SSH_PRIVATE_KEY }}
  #       port: ${{ env.SSH_PORT }}
  #       source: ${{ env.NEURONE_CORE_IMAGES_PATH_SOURCE }}
  #       target: ${{ env.NEURONE_CORE_IMAGES_SERVER_PATH_TARGET }}
  #       strip_components: 2


  # deploy:
  
  #   # needs: [neurone-core-CI, neurone-gm-CI, trivia-CI]
  #   # needs: [send-build-trivia, send-build-neurone-core, neurone-gm-CI]
  #   runs-on: ubuntu-22.04
    
  #   steps:
    
  #   #Generate a pair of SSH keys that will be replaced later by the environment variable keys
  #   - name: Create ssh-keygen pair
  #     run: ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ''

  #   - name: Copy ssh key of environment variables in local machine
  #     run: |
  #       echo "${{ env.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
  #       echo "${{ env.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
  #       chmod 600 ~/.ssh/id_rsa  
        
        
  #   - name: Cloning NEURONE-Trivia-Deployment repository
  #     uses: actions/checkout@v3
  #     with:
  #       repository: ${{ env.NEURONE_TRIVIA_DEPLOY_REPOSITORY }}
  #       # token: 
  #       path: ${{ env.NEURONE_TRIVIA_DEPLOY_REPOSITORY_FOLDER_NAME }}      
      
  #   # - name: Update Playbook with Node and Angular version of environment variables (Optional)
  #   #   working-directory: ${{ env.NEURONE_TRIVIA_ANSIBLE_FILES_DIRECTORY }}
  #   #   run: |
  #   #     awk '/- {role: node-with-nvm,/ {print "    - {role: node-with-nvm, node_version: \"${{ env.NODE_VERSION }}\", angular_version: \"${{ env.ANGULAR_VERSION }}\"}"; next} 1' ./playbook.yaml > ./playbook.yaml.tmp && mv ./playbook.yaml.tmp ./playbook.yaml    
      
  #   - name: Deploy on server using Ansible with NEURONE-Trivia-Deployment repository
  #     uses: dawidd6/action-ansible-playbook@v2
  #     with:
  #       playbook: deploy-prod-server.yaml # Required, playbook filepath
  #       directory: ${{ env.NEURONE_TRIVIA_ANSIBLE_FILES_DIRECTORY }} # Optional, directory where playbooks live
  #       key: ${{ env.SSH_PRIVATE_KEY }} #SSH private key
  #       inventory: |
  #         webservers:
  #           hosts:
  #             neurone-trivia-dev:
  #               ansible_host: ${{ env.SERVER_IPV4 }}
  #               ansible_user: ${{ env.SERVER_USERNAME }}
          
  #           vars:
  #             ansible_python_interpreter: /usr/bin/python3        
  #       options: |
  #         --extra-vars ansible_become_pass=${{ env.SERVER_PASSWORD }}


