# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: NEURONE-Trivia CI-CD

on:
  workflow_dispatch:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]


env:
  #Dependencies Version
  NODE_VERSION: "10.19.0"
  ANGULAR_VERSION: "9.1.13"

  #SSH keys of Autorized Host/User by the server to connect later
  SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }} #Clave publica de la maquina para conectarse al servidor
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY}} #Clave privada de la maquina para conectarse al servidor

  #NEURONEGM Database information
  NEURONEGM_DATABASE: "neuronegm"
  NEURONEGM_DATABASE_USER: "neuroneAdmin"
  NEURONEGM_DATABASE_PASSWORD: ${{ secrets.NEURONEGM_DATABASE_PASSWORD }}

  NEURONEGM_REPOSITORY: "trabajo-titulacion-neurone/modulo-neurone-gm"
  NEURONEGM_REPOSITORY_FOLDER_NAME: "NEURONE-GM"
  NEURONEGM_SERVER_DIRECTORY: "./NEURONE-GM/Server"

  #Trivia Data
  TRIVIA_REPOSITORY_FOLDER_NAME: "GAME"
  TRIVIA_CLIENT_DIRECTORY: "./GAME/Client"
  TRIVIA_SERVER_DIRECTORY: "./GAME/Server"
  BUILD_TRIVIA_LOCAL_PATH_SOURCE: "./GAME/Server/public"

  #Trivia deploy data
  NEURONE_DEPLOY_REPOSITORY: "trabajo-titulacion-neurone/neurone-deploy"
  NEURONE_DEPLOY_REPOSITORY_FOLDER_NAME: "neurone-deploy"
  TRIVIA_DEPLOY_DIRECTORY: "./neurone-deploy/trivia-deploy"
  TRIVIA_ANSIBLE_FILES_DIRECTORY: "./neurone-deploy/trivia-deploy/ansible-files"

  #Server Data
  SERVER_USERNAME: "gerardoluceroc"
  SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
  SERVER_IPV4: 161.35.52.95
  SSH_PORT: 22
  BUILD_TRIVIA_SERVER_PATH_TARGET: "./apps/GAME/Server"


jobs:
  build:

    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [16.14.1]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    
    #Generate a pair of SSH keys that will be replaced later by the environment variable keys
    - name: ssh-keygen
      run: ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ''

    - name: Copy ssh key of environment variables in local machine
      run: |
        echo "${{ env.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
        echo "${{ env.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa  
        
    - name: Cloning Trivia Repository
      uses: actions/checkout@v3
      with:
        path: ${{ env.TRIVIA_REPOSITORY_FOLDER_NAME }} 
        
    - name: Cloning Neurone-gm repository
      uses: actions/checkout@v3
      with:
        repository: ${{ env.NEURONEGM_REPOSITORY }}
        # token: 
        path: ${{ env.NEURONEGM_REPOSITORY_FOLDER_NAME }}

    - name: Cloning neurone-deploy repository
      uses: actions/checkout@v3
      with:
        repository: ${{ env.NEURONE_DEPLOY_REPOSITORY }}
        # token: 
        path: ${{ env.NEURONE_DEPLOY_REPOSITORY_FOLDER_NAME }}

    
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        # node-version: ${{ matrix.node-version }}
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: '${{ env.TRIVIA_CLIENT_DIRECTORY }}/package-lock.json'
      
    # - name: Run MongoDB with Docker
    #   run: docker run -d --name mongo-for-tests -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=${{ env.NEURONEGM_DATABASE_USER}} -e MONGO_INITDB_ROOT_PASSWORD=${{ env.NEURONEGM_DATABASE_PASSWORD }} -e MONGO_INITDB_DATABASE=${{ env.NEURONEGM_DATABASE }} mongo:latest
   
    # - name: Install pm2 globally
    #   run: npm install -g pm2

    # - name: Install Angular globally
    #   run: npm install -g @angular/cli@${{env.ANGULAR_VERSION}}
        
    # - name: Run Neurone-gm Server with pm2
    #   working-directory: ${{ env.NEURONEGM_SERVER_DIRECTORY }}
    #   run: |
    #     npm install
    #     # npm test
    #     pm2 start app.js --name neurone-gm

    # - name: Run Trivia Server with pm2
    #   working-directory: ${{ env.TRIVIA_SERVER_DIRECTORY }}
    #   run: |
    #     npm install
    #     # npm test
    #     pm2 start app.js --name neurone-trivia

    # - name: Build Trivia Frontend
    #   working-directory: ${{ env.TRIVIA_CLIENT_DIRECTORY }}
    #   run: |
    #     npm install
    #     ng build --prod --output-path ../Server/public

    # - name: Update Playbook with Node and Angular version of environment variables (Optional)
    #   working-directory: ${{ env.TRIVIA_ANSIBLE_FILES_DIRECTORY }}
    #   run: |
    #     awk '/- {role: node-with-nvm,/ {print "    - {role: node-with-nvm, node_version: \"${{ env.NODE_VERSION }}\", angular_version: \"${{ env.ANGULAR_VERSION }}\"}"; next} 1' ./playbook.yaml > ./playbook.yaml.tmp && mv ./playbook.yaml.tmp ./playbook.yaml    
      
    # - name: Deploy on server using Ansible with neurone-deploy repository
    #   uses: dawidd6/action-ansible-playbook@v2
    #   with:
    #     playbook: playbook.yaml # Required, playbook filepath
    #     directory: ${{ env.TRIVIA_ANSIBLE_FILES_DIRECTORY }} # Optional, directory where playbooks live
    #     key: ${{env.SSH_PRIVATE_KEY}} # Optional, SSH private key
    #     inventory: |
    #       webservers:
    #         hosts:
    #           neurone-trivia-dev:
    #             ansible_host: ${{ env.SERVER_IPV4 }}
    #             ansible_user: ${{ env.SERVER_USERNAME }}
          
    #         vars:
    #           ansible_python_interpreter: /usr/bin/python3        
    #     options: |
    #       --extra-vars ansible_become_pass=${{ env.SERVER_PASSWORD }}

    # - name: Build of Trivia is sent to the server via ssh
    #   uses: appleboy/scp-action@v0.1.4
    #   with:
    #     host: ${{ env.SERVER_IPV4 }}
    #     username: ${{ env.SERVER_USERNAME }}
    #     # password: ${{ env.SERVER_PASSWORD }}
    #     key: ${{ env.SSH_PRIVATE_KEY }}
    #     port: ${{ env.SSH_PORT }}
    #     source: ${{ env.BUILD_TRIVIA_LOCAL_PATH_SOURCE }}
    #     target: ${{ env.BUILD_TRIVIA_SERVER_PATH_TARGET }}
    #     strip_components: 3




    - name: Cloning neurone
      uses: actions/checkout@v3
      with:
        path: neurone-master

    - name: install docker dependencies
      working-directory: ./neurone-master
      run: |
        sudo apt-get update
        sudo apt-get install ca-certificates curl gnupg lsb-release


    - name: install docker and docker compose
      working-directory: ./neurone-master
      run: |
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose


    - name: build neurone
      working-directory: ./neurone-master
      run: ./neurone-build.sh




















  

